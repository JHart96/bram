model$prior_check()
model$prior_check()
# Define model
model <- bram(cyl ~ scale(hp) + scale(disp), data=mtcars, family="poisson")
# Set and check priors
priors <- model$get_priors()
priors$prior[1] <- "normal(0, 1)"
priors$prior[4] <- "normal(0, 1)"
model$set_priors(priors)
model$prior_check()
# Define model
model <- bram(scale(cyl) ~ scale(hp) + scale(disp), data=mtcars, family="poisson")
# Set and check priors
priors <- model$get_priors()
priors$prior[1] <- "normal(0, 1)"
# priors$prior[4] <- "normal(0, 1)"
model$set_priors(priors)
model$prior_check()
# Define model
model <- bram(cyl ~ scale(hp) + scale(disp), data=mtcars, family="poisson")
# Set and check priors
priors <- model$get_priors()
priors$prior[1] <- "normal(0, 1)"
# priors$prior[4] <- "normal(0, 1)"
model$set_priors(priors)
model$prior_check()
# Define model
model <- bram(cyl ~ scale(hp) + scale(disp), data=mtcars, family="poisson")
# Set and check priors
priors <- model$get_priors()
priors$prior[1] <- "normal(0, 1)"
priors$prior[4] <- "normal(0, 1)"
model$set_priors(priors)
model$prior_check()
plot(density(mtcars$hp))
plot(density(mtcars$disp))
plot(density(scale(mtcars$disp)))
?scale
plot(density(scale(mtcars$disp)))
priors$prior
priors
# Define model
model <- bram(cyl ~ scale(hp) + scale(disp), data=mtcars, family="poisson")
# Set and check priors
priors <- model$get_priors()
priors$prior[2] <- "normal(0, 1)"
priors$prior[3] <- "normal(0, 0.5)"
priors$prior[4] <- "normal(0, 1)"
model$set_priors(priors)
model$prior_check()
# Set and check priors
priors <- model$get_priors()
priors$prior[2] <- "normal(0, 1)"
priors$prior[3] <- "normal(0, 0.1)"
priors$prior[4] <- "normal(0, 1)"
model$set_priors(priors)
model$prior_check()
priors
# Set and check priors
priors <- model$get_priors()
priors$prior[2] <- "normal(0, 0.5)"
priors$prior[3] <- "normal(0, 1)"
priors$prior[4] <- "normal(0, 1)"
model$set_priors(priors)
model$prior_check()
# Set and check priors
priors <- model$get_priors()
priors$prior[2] <- "normal(0, 0.8)"
priors$prior[3] <- "normal(0, 1)"
priors$prior[4] <- "normal(0, 1)"
model$set_priors(priors)
model$prior_check()
priors
priors$prior[2] <- "normal(0, 1)"
priors$prior[3] <- "normal(0, 1)"
priors$prior[4] <- "normal(0, 1)"
model$set_priors(priors)
model$prior_check()
priors
priors$prior[2] <- "normal(0, 1)"
priors$prior[3] <- "normal(0, 0.5)"
priors$prior[4] <- "normal(0, 1)"
model$set_priors(priors)
model$prior_check()
priors
priors$prior[2] <- "normal(0, 1)"
priors$prior[3] <- "normal(0, 0.75)"
priors$prior[4] <- "normal(0, 1)"
model$set_priors(priors)
model$prior_check()
priors$prior[2] <- "normal(0, 1)"
priors$prior[3] <- "normal(0, 0.8)"
priors$prior[4] <- "normal(0, 1)"
model$set_priors(priors)
model$prior_check()
priors$prior[2] <- "normal(0, 1)"
priors$prior[3] <- "normal(0, 0.8)"
priors$prior[4] <- "normal(0, 1)"
model$set_priors(priors)
model$prior_check()
priors
priors$prior[2] <- "normal(0, 1)"
priors$prior[3] <- "normal(0, 0.7)"
priors$prior[4] <- "normal(0, 1)"
model$set_priors(priors)
model$prior_check()
priors <- model$get_priors()
priors$prior[2] <- "normal(0, 5)" # hp
priors$prior[3] <- "normal(0, 5 * 0.7)" # disp
priors$prior[4] <- "normal(0, 1)"
model$set_priors(priors)
model$prior_check()
priors <- model$get_priors()
priors$prior[2] <- "normal(0, 2)" # hp
priors$prior[3] <- "normal(0, 2 * 0.7)" # disp
priors$prior[4] <- "normal(0, 1)"
model$set_priors(priors)
model$prior_check()
priors <- model$get_priors()
priors$prior[2] <- "normal(0, 1.5)" # hp
priors$prior[3] <- "normal(0, 1.5 * 0.7)" # disp
priors$prior[4] <- "normal(0, 1)"
model$set_priors(priors)
model$prior_check()
# Set and check priors
priors <- model$get_priors()
priors$prior[2] <- "normal(0, 1.5)" # hp
priors$prior[3] <- "normal(0, 1.5 * 0.7)" # disp
priors$prior[4] <- "normal(0, 1.5)"
model$set_priors(priors)
model$prior_check()
# Set and check priors
priors <- model$get_priors()
priors$prior[2] <- "normal(0, 1.5)" # hp
priors$prior[3] <- "normal(0, 1.5 * 0.7)" # disp
priors$prior[4] <- "normal(0, 1.2)"
model$set_priors(priors)
model$prior_check()
# Set and check priors
priors <- model$get_priors()
priors$prior[2] <- "normal(0, 1.5)" # hp
priors$prior[3] <- "normal(0, 1.5 * 0.7)" # disp
priors$prior[4] <- "normal(0, 1.2)"
model$set_priors(priors)
model$prior_check()
# Set and check priors
priors <- model$get_priors()
priors$prior[2] <- "normal(0, 1.5)" # hp
priors$prior[3] <- "normal(0, 1.5 * 0.7)" # disp
priors$prior[4] <- "normal(0, 1)"
model$set_priors(priors)
model$prior_check()
# Fit the model
model$fit()
model$brms_model
default_model <- brm(cyl ~ scale(hp) + scale(disp), data=mtcars, family="poisson")
default_model <- brms::brm(cyl ~ scale(hp) + scale(disp), data=mtcars, family="poisson")
brm
default_model
model$brms_model
default_model <- brms::brm(cyl ~ hp + disp, data=mtcars, family="poisson")
default_model
model$brms_model
bayesplot::mcmc_trace(model$brms_model)
print(model$brms_model$formula)
marginaleffects::marginaleffects(model$brms_model)
print(model$brms_model$formula, newdata="mean")
marginaleffects::marginaleffects(model$brms_model, newdata="mean")
summary(marginaleffects::marginaleffects(model$brms_model))
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
# Define model
model <- bram(cyl ~ scale(hp) + scale(disp), data=mtcars, family="poisson")
# Set and check priors
priors <- model$get_priors()
priors$prior[2] <- "normal(0, 1.5)" # hp
priors$prior[3] <- "normal(0, 1.5 * 0.7)" # disp
priors$prior[4] <- "normal(0, 1)"
model$set_priors(priors)
model$prior_check()
# Fit the model
model$fit()
# Check the sampler diagnostics
model$diagnostics()
# Run posterior checks
model$posterior_check()
# Run posterior checks
model$posterior_check()
devtools::load_all(".")
model <- bram(cyl ~ scale(hp) + scale(disp), data=mtcars, family="poisson")
# Set and check priors
priors <- model$get_priors()
priors$prior[2] <- "normal(0, 1.5)" # hp
priors$prior[3] <- "normal(0, 1.5 * 0.7)" # disp
priors$prior[4] <- "normal(0, 1)"
model$set_priors(priors)
model$prior_check()
# Fit the model
model$fit()
# Check the sampler diagnostics
model$diagnostics()
# Run posterior checks
model$posterior_check()
# Run posterior checks
model$posterior_check()
devtools::load_all(".")
model <- bram(cyl ~ scale(hp) + scale(disp), data=mtcars, family="poisson")
# Set and check priors
priors <- model$get_priors()
priors$prior[2] <- "normal(0, 1.5)" # hp
priors$prior[3] <- "normal(0, 1.5 * 0.7)" # disp
priors$prior[4] <- "normal(0, 1)"
model$set_priors(priors)
model$prior_check()
# Fit the model
model$fit()
# Check the sampler diagnostics
model$diagnostics()
# Run posterior checks
model$posterior_check()
# Create model summary
model$summary() # Use marginal effects here
?brms::brm
# Define model
expect_error(
model <- bram(cyl ~ scale(hp) + scale(disp), data=mtcars, family="poisson"),
regexp=NA
)
expect_error(
model <- bram(cyl ~ scale(hp) + scale(disp), data=mtcars, family="poisson"),
regexp=NA
)
expect_error(
model <- bram(cyl ~ scale(hp) + scale(disp), data=mtcars, family="poisson"),
regexp=NA
)
expect_message(
model$diagnostics()
)
expect_message(
model$posterior_check()
)
model$posterior_check()
model$get_priors()
class(model$get_priors())
inherits(model$get_priors(), "brmsprior")
inherits(model$get_priors(), "brmsprio")
# Define model
expect_error(
model <- bram(cyl ~ scale(hp) + scale(disp), data=mtcars, family="poisson"),
regexp = NA
)
# Check messages pre model fit
expect_message (
model$diagnostics()
)
expect_message (
model$posterior_check()
)
# Set and check priors
expect_error (
priors <- model$get_priors(),
regexp = NA
)
expect_true (
inherits(model$get_priors(), "brmsprior")
)
# Check the sampler diagnostics
model$diagnostics()
# Create model summary
model$summary()
# Define model
expect_error(
model <- bram(cyl ~ scale(hp) + scale(disp), data=mtcars, family="poisson"),
regexp = NA
)
# Check messages pre model fit
expect_message (
model$diagnostics()
)
expect_message (
model$posterior_check()
)
# Set and check priors
expect_error (
priors <- model$get_priors(),
regexp = NA
)
expect_true (
inherits(model$get_priors(), "brmsprior")
)
priors$prior[2] <- "normal(0, 1.5)" # hp
priors$prior[3] <- "normal(0, 1.5 * 0.7)" # disp
priors$prior[4] <- "normal(0, 1)"
expect_error (
model$set_priors(priors),
regexp = NA
)
expect_error (
model$prior_check(),
regexp = NA
)
# Fit the model
expect_error (
model$fit(),
regexp = NA
)
# Check the sampler diagnostics
expect_error (
model$diagnostics(),
regexp = NA
)
# Run posterior checks
expect_error (
model$posterior_check(),
regexp = NA
)
# Create model summary
model$summary()
# Create model summary
class(model$summary())
devtools::test()
devtools::load_all(".")
devtools::test()
priors
?set_prior
priors$coef
priors$prior
priors$coef[2]
priors$coef
priors$prior
priors$source
model$get_priors()
1.5 * 0.7
priors <- c(
prior("normal(0, 1.5)", coef="scalehp"),
prior("normal(0, 1)", coef="scaledisp"),
prior("normal(0, 1)", coef="Intercept")
)
priors <- c(
brms::prior("normal(0, 1.5)", coef="scalehp"),
brms::prior("normal(0, 1)", coef="scaledisp"),
brms::prior("normal(0, 1)", coef="Intercept")
)
expect_error (
model$set_priors(priors),
regexp = NA
)
expect_error (
model$prior_check(),
regexp = NA
)
priors <- c(
brms::prior("normal(0, 1.5)", coef="scalehp"),
brms::prior("normal(0, 1)", coef="scaledisp"),
brms::prior("normal(0, 1)", class="Intercept")
)
expect_error (
model$set_priors(priors),
regexp = NA
)
expect_error (
model$prior_check(),
regexp = NA
)
devtools::test()
usethis::use_vignette()
usethis::use_vignette("quickstart")
library(bram)
model <- bram(cyl ~ scale(hp) + scale(disp), data=mtcars, family="poisson")
model
priors <- model$get_priors()
priors
library(bram)
library(brms)
model <- bram(cyl ~ scale(hp) + scale(disp), data=mtcars, family="poisson")
priors <- model$get_priors()
priors
priors <- c(
prior("normal(0, 1.5)", coef="scalehp"),
prior("normal(0, 1)", coef="scaledisp"),
prior("normal(0, 1)", class="Intercept")
)
priors <- c(
prior("normal(0, 1.5)", coef="scalehp"),
prior("normal(0, 1)", coef="scaledisp"),
prior("normal(0, 1)", class="Intercept")
)
model$set_priors(priors)
priors <- c(
prior("normal(0, 1.5)", coef="scalehp"),
prior("normal(0, 1)", coef="scaledisp"),
prior("normal(0, 1)", class="Intercept")
)
model$set_priors(priors)
model$prior_check()
priors
model$get_priors()
priors <- c(
prior(normal(0, 1.5), coef="scalehp"),
prior(normal(0, 1), coef="scaledisp"),
prior(normal(0, 1), class="Intercept")
)
model$set_priors(priors)
model$prior_check()
priors <- c(
prior(normal(0, 1.5), coef="scalehp"),
prior(normal(0, 2), coef="scaledisp"),
prior(normal(0, 1), class="Intercept")
)
model$set_priors(priors)
priors <- c(
prior(normal(0, 1.5), coef="scalehp"),
prior(normal(0, 2), coef="scaledisp"),
prior(normal(0, 1), class="Intercept")
)
model$set_priors(priors)
model$prior_check()
model$fit()
model$diagnostics()
model$diagnostics()
devtools::load_all(".")
model$summary()
model$get_priors()
devtools::install()
priors <- c(
prior(normal(0, 0.5), coef="scalehp"),
prior(normal(0, 1), coef="scaledisp"),
prior(normal(0, 1), class="Intercept")
)
model$set_priors(priors)
model$prior_check()
devtools::load_all(".")
library(bram)
library(brms)
model <- bram(cyl ~ scale(hp) + scale(disp), data=mtcars, family="poisson")
devtools::load_all(".")
model$get_priors()
priors <- c(
prior(normal(0, 0.5), coef="scalehp"),
prior(normal(0, 2), coef="scaledisp"),
prior(normal(0, 1), class="Intercept")
)
model$set_priors(priors)
model$prior_check()
priors <- c(
prior(normal(0, 0.5), coef="scalehp"),
prior(normal(0, 1), coef="scaledisp"),
prior(normal(0, 1), class="Intercept")
)
model$set_priors(priors)
model$prior_check()
priors <- c(
prior(normal(0, 0.5), coef="scalehp"),
prior(normal(0, 0.8), coef="scaledisp"),
prior(normal(0, 1), class="Intercept")
)
model$set_priors(priors)
model$prior_check()
priors <- c(
prior(normal(0, 0.5), coef="scalehp"),
prior(normal(0, 0.8), coef="scaledisp"),
prior(normal(0.5, 1), class="Intercept")
)
model$set_priors(priors)
model$prior_check()
priors <- c(
prior(normal(0, 0.5), coef="scalehp"),
prior(normal(0, 0.8), coef="scaledisp"),
prior(normal(1, 1), class="Intercept")
)
model$set_priors(priors)
model$prior_check()
devtools::build_manual()
devtools::build()
devtools::build_vignettes()
vignette("quickstart")
vignette("bram::quickstart")
?vignette
vignette("quickstart", package="bram")
devtools::build()
usethis::use_mit_license()
mtcars
library(bram)
library(brms)
model <- bram(cyl ~ scale(hp) + scale(disp), data=mtcars, family="poisson")
model <- bram(cyl ~ scale(hp) + scale(disp), data=mtcars, family="poisson")
model$fit()
model$brms_model
mtcars
rownames(mtcars)
rownames(mtcars)[1]
rownames(mtcars)[1][1:4]
as.character(rownames(mtcars))[1][1:4]
rownames(mtcars)[1]
substr(rownames(mtcars)[1], 1, 4)
sapply(1:nrow(mtcars), function(i) substr(rownames(mtcars)[i], 1, 4) == "Merc")
library(bram)
library(brms)
mtcars$is_merc <- sapply(1:nrow(mtcars), function(i) substr(rownames(mtcars)[i], 1, 4) == "Merc")
model <- bram(mpg ~ is_merc, data=mtcars, family="gaussian")
model$fit()
model$diagnostics()
model$summary()
mtcars
summary(lm(cyl ~ is_merc))
summary(lm(cyl ~ is_merc, mtcars))
summary(lm(disp ~ is_merc, mtcars))
summary(lm(wt ~ is_merc, mtcars))
summary(lm(carb ~ is_merc, mtcars))
summary(lm(gear ~ is_merc, mtcars))
